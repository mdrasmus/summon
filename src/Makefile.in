
INCLUDE = \
    -I$(SRCPREFIX)/Common \
    -I$(SRCPREFIX)/GlutMVC \
    -I$(SRCPREFIX)/MVC 

MY_LIBS = \
        $(SRCPREFIX)/Common/libCommon.a \
        $(SRCPREFIX)/GlutMVC/libGlutMVC.a \
        $(SRCPREFIX)/MVC/libMVC.a 

COMPILE = -c \
    -Wall  \
    $(INCLUDE) 

ifdef DEBUG
	COMPILE := $(COMPILE) -g
else
    #COMPILE := $(COMPILE) -O3
endif

# Profiling code
ifdef PROFILE
    COMPILE := $(COMPILE) -pg 
endif


# rules for subsystems
$(SRCPREFIX)/Common/libCommon.a::
	$(MAKE) -C $(SRCPREFIX)/Common
    
$(SRCPREFIX)/GlutMVC/libGlutMVC.a::
	$(MAKE) -C $(SRCPREFIX)/GlutMVC

$(SRCPREFIX)/MVC/libMVC.a::
	$(MAKE) -C $(SRCPREFIX)/MVC

$(SRCPREFIX)/Summon/$(MODULE)::
	$(MAKE) -C $(SRCPREFIX)/Summon


# basic compile rule
$(OBJS): %.o: %.cpp
	$(CC) $(COMPILE) $(CFLAGS) -o $@ $<

# basic library building
$(LIB): $(OBJS)
	$(AR) -r $(LIB) $(OBJS)

# test compiling
test:
	echo $(COMPILE)

# clean rules
clean:
	$(RM) $(OBJS) $(LIB) $(MODULE)

cleanall:
	$(MAKE) clean -C $(SRCPREFIX)/Common
	$(MAKE) clean -C $(SRCPREFIX)/GlutMVC
	$(MAKE) clean -C $(SRCPREFIX)/MVC
	$(MAKE) clean -C $(SRCPREFIX)/Summon
