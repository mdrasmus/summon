CC = g++
AR = ar

INCLUDE = \
    -I$(SRCPREFIX)/Common \
    -I$(SRCPREFIX)/GlutMVC \
    -I$(SRCPREFIX)/MVC 

MY_LIBS = \
        $(SRCPREFIX)/Common/libCommon.a \
        $(SRCPREFIX)/GlutMVC/libGlutMVC.a \
        $(SRCPREFIX)/MVC/libMVC.a 

COMPILE = -c \
    -Wall -fno-strict-aliasing -O3 -fPIC  \
    $(INCLUDE) 

ifdef DEBUG
	COMPILE := $(COMPILE) -g
endif

# Profiling code
ifdef PROFILE
    COMPILE := $(COMPILE) -pg 
endif

#
# Python COMPILE flags
#
COMPILE := $(COMPILE) -I/usr/include/python2.4 -I/usr/include/python2.5



# rules for subsystems
$(SRCPREFIX)/Common/libCommon.a::
	make -C $(SRCPREFIX)/Common
    
$(SRCPREFIX)/GlutMVC/libGlutMVC.a::
	make -C $(SRCPREFIX)/GlutMVC

$(SRCPREFIX)/MVC/libMVC.a::
	make -C $(SRCPREFIX)/MVC

$(SRCPREFIX)/Summon/$(MODULE)::
	make -C $(SRCPREFIX)/Summon


# basic compile rule
$(OBJS): %.o: %.cpp
	$(CC) $(CFLAGS) $(COMPILE) -o $@ $<

# basic library building
$(LIB): $(OBJS)
	$(AR) -r $(LIB) $(OBJS)

# test compiling
test:
	echo $(COMPILE)

# clean rules
clean:
	rm -rf $(OBJS) $(LIB) $(MODULE)

cleanall:
	make clean -C $(SRCPREFIX)/Common
	make clean -C $(SRCPREFIX)/GlutMVC
	make clean -C $(SRCPREFIX)/MVC
	make clean -C $(SRCPREFIX)/Summon
